[["index.html", "Vanderbilt Biostatistics Graduate Student Handbook Chapter 1 Introduction", " Vanderbilt Biostatistics Graduate Student Handbook Lucy D’Agostino McGowan, Nathan James, Nick Strayer, Sandya Lakkur 2024-09-30 Chapter 1 Introduction Welcome to Vanderbilt’s Biostatistics Graduate Program! We are so happy you are here. This is meant to serve as a bit of a manual for incoming students to help your transition go a bit smoother. We have compiled our best &amp; wildest advice into a beautiful bookdown book. ENJOY (or else…) The student handbook code is on github here. You can contribute by starting a new issue, modifying a page, or adding a new page. See \\(\\S\\) 2.3 to get started with github. "],["computing.html", "Chapter 2 Computing Tips 2.1 Downloads 2.2 File Organization 2.3 Github 2.4 Bash Profile 2.5 Statistical Software", " Chapter 2 Computing Tips Almost all of the students here use macs. It is not required, but it will make your life easier. These are some tips that I feel have made me successful, but there are definitely other ways to do it. 2.1 Downloads Here are some things you should get on your computer before you get started. 2.1.1 Homebrew Install homebrew. Homebrew is essentially a package manager. Paste the command below in your terminal prompt. /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; After doing that double check that you’ve got it installed correctly by running brew doctor If you see Your system is ready to brew you are good to go. You install packages by running brew install package-name, for example brew install git to install git (which you should do RIGHT NOW if you don’t have it yet). Some things I recommend getting now that you have brew installed: git python cowsay thefuck 2.1.2 Bash-it Make your terminal beautiful. I really like Bash-it. Both because I like to say it outloud, and because it makes my terminal look baller. It has sweet plugins (like showing git branches!) and awesome aliases that will save your pretty little fingers. To install, type this in terminal, git clone https://github.com/revans/bash-it.git ~/.bash_it then run, ~/.bash_it/install.sh I use a slightly edited bobby theme. Here are some other themes to choose from. 2.1.3 R If you don’t already have it, download R &amp; if you’d like RStudio 2.2 File Organization File organization is super important. And fun! There are a lot of different conventions, I took a while iterating towards one I actually really like. 2.2.1 Naming conventions Since we have gone to so much effort to make our terminal look dope, we should be congizent of how to name folders to most easily use it (for example, folder and file names with spaces are a pain because you have to add quotation marks). Instead of spaces, uses - between words for folder &amp; filenames name folders consistently within projects to allow you to reuse functions/run scripts (more below) 2.2.2 Folders I have 3 main folders: phd working archive The phd folder is pretty self explanatory. Within this folder I have: courses journal-club teaching The working folder contains projects I am actively working on. This includes RA work, projects I am working on with professors, consulting, and tutoring files. I have these separated because I am acutely aware of making sure these are backed up regularly on github. Within each of these, I have: code data reports src The consistent naming convention allows me to have set code to run everything for each different project I am on. The src folder is especially useful for holding functions I have written that I reuse a bazillion times. The archive folder contains projects that I have completed. These are backed up every time a new folder is added, but not as regularly as the working folder. 2.3 Github If you do not already have one, set up a github account – make sure that you get an education discount so you can set up private repos. Jenny Bryan has an awesome course on Github for the useR. Gitkraken is a nice GUI to avoid using git at the command line For some giggles 2.4 Bash Profile Now that we’ve downloaded a bunch of nifty programs using brew and we have github up &amp; running, you can save some typing time in terminal by adding aliases (shortcuts) to your .bash_profile. Open Terminal and type open -e ~/.bash_profile (if you installed bash-it this will work, if you do not have a .bash_profile in your home directory yet, you can create one using your favorite text editor, for example nano .bash_profile) Add some aliases like this: alias alias_name = \"terminal command\" For example: # Edit profile alias edit_profile=&quot;open -e ~/.bash_profile&quot; Here are some we \\(\\heartsuit\\): # Set RStudio alias alias RS=&quot;open -a RStudio&quot; # Set reload profile alias alias reload_profile=&quot;. ~/.bash_profile&quot; # Edit profile alias edit_profile=&quot;open -e ~/.bash_profile&quot; #Lazy git - will add, commit, and push with one command # NOTE: each command (add, commit, push) in this function is progressively harder # to undo/fix if you muck something up (e.g., adding PHI to a public repo!) # so make sure you understand what you&#39;re doing #Set our default branch to push to as the one we are in git config --global push.default current function lgit() { git add -A git commit -m &quot;$1&quot; git push } 2.5 Statistical Software In this department, we conduct the majority of our analyses using R &amp; python. We use Stata for a few classes, so you may want to get that as well. If you are interested in learning SAS, check this out. "],["resources.html", "Chapter 3 Resources 3.1 Books 3.2 Comprehensive Exams 3.3 Orals Exam", " Chapter 3 Resources Here are a few miscellaneous links to resources that may save you some time. 3.1 Books You can find a large portion of the textbooks required for classes online. Since it doesn’t make sense for people to repeat the same search every year for textbooks we have assembled a dropbox folder containing all the currently known books. If you find a new book make sure to Slack it to Nick and he can add it. All of the books ever 3.2 Comprehensive Exams You can check out the official biostatistics graduate department comprehensive exams page and sample exams from previous years Below are some resources that previous students have developed to help you prepare for the comps 3.2.1 First Year Lucy’s 1st year comps survival guide has printable flashcards and cartoons based on Foundations of Statistical Inference and Fundamentals of Probability Nathan’s inference notes and probability notes outline many of the main ideas, formulas, theorems, etc. tested on the 1st year comps. You can use these as a starting point to develop your own study guides John Muschelli, a former Johns Hopkins biostatistics PhD student, wrote a blog post with some good tips for first year comprehensive exams 3.2.2 Second Year The 2nd year comp is a one week take-home exam. In some ways there is less time pressure than the 1st year comps, but more work and in-depth thought is required. Here are some tips: Read through the entire exam once or twice before you start working on individual problems. This will allow you to note what topics are relevant for each problem and come up with a strategy for how to allocate enough time to complete each section. You can get a head start by making a template for the analysis part of the exam. Check out past exams to get an idea of the general format for your template. If you are doing simulations or models that take a while to run the cache=TRUE chunk option in Rmarkdown can save a lot of time. Consider separating the code chunks that run the analysis (e.g. fitting models) from code chunks that use the output of analysis (e.g. plotting predicted values or summarizing model fits). That way you won’t have to re-run the time consuming code chunk if you only want to tweak a graph or summary table. 3.3 Orals Exam Here are a few orals exams document examples offered by some students who passed their orals. As of 2024, the student handbook requires the following for the orals exam: To help focus the examination, the student prepares and presents a literature review or an active exploration of an advanced statistical method or concept. The presentation typically takes 30 minutes. The student also prepares an overview document that summarizes their review or exploration and demonstrates synthesis, familiarity, and command of the topic as well as outlining potential avenues of future research. The orals exam requirements varies a lot among advisors and depends a lot on dissertation progress. Name (Then) advisor Quote: Requirement from Their Advisor Link to document(s) Megan Jones Simon Vandekar The only ‘requirements’ were a written document over some statistical topic and corresponding slides for the exam portion.Since I had already finished one project and was starting on another, he basically advised me to put the paper I had done as one of the sections (so it is the bulk of my written doc) and do some lit review related to the next project. Slide and Document Yeji Ko Ben French One page background literature review and presentation slides. Max Rohde Frank Harrell Ben French I just sent in a rough draft of my tutorial paper in Statistics in Medicine (first dissertation paper). Paper Lan Shi Dandan Liu Dandan has only required presentation slides and no overview document is required. Joshua Slone Bryan Shepherd I think Bryan considers the document as a Pass/Fail completion requirement. He provided more feedback about the presentation. Also, though, the content was very similar so it applies to both. Ruby Xiong Simon Vandekar It is my first disseratation paper plus a literature review for my second dissertation paper. Simon did not care for document format so I experimented with quarto website. Document "],["bgsa.html", "Chapter 4 Biostatistics Graduate Student Association 4.1 Mission 4.2 Constitution 4.3 Website", " Chapter 4 Biostatistics Graduate Student Association The Biostatistics Graduate Student Association was founded in 2016 by a group of enthusastic students who were particularly excited about getting food at journal club, nerdy t-shirts, and sharing knowledge. It is a recognized organization of Vanderbilt University as well as an ASA student chapter. Currently, it functions primarily to host bi-monthly student-run Journal Clubs. Information about electing officers is included in the constitution (\\(\\S\\) 4.2.4). 4.1 Mission We seek to facilitate an environment for students to engage in discussions regarding biostatistics and data science concepts in order to further their knowledge and understanding of the current state of the field. 4.2 Constitution BIOSTATISTICS GRADUATE STUDENT ASSOCIATION CONSTITUTION 4.2.1 ARTICLE I NAME OF CLUB The name of this club is Biostatistics Graduate Student Association. 4.2.2 ARTICLE II PURPOSE OF CLUB The purpose of the Biostatistics Graduate Student Association is to facilitate an environment for students to engage in discussions regarding biostatistics and data science concepts in order to further their knowledge and understanding of the current state of the field. 4.2.3 ARTICLE III MEMBERSHIP The Biostatistics Graduate Student Association encompasses all biostatistics graduate students as well as students with an interest in biostatistics/data science. 4.2.4 ARTICLE IV QUALIFICATION AND ELECTION OF OFFICERS Section 1. Officers must be currently enrolled and maintain full-time student status. Section 2. The Executive Board will consist of four officer positions. There will be a President, Vice President, Secretary, and Treasurer. Section 3. New officers will be nominated and elected by club members at the completion of the academic year. 4.2.5 ARTICLE V DUTIES OF OFFICERS Section 1. President Introduce all meetings Carry out the provisions of the constitution Section 2. Vice President Assume the duties of the president in his/her absence Perform any duties delegated by president Actively participate in planning club functions Section 3. Secretary Maintain the list of presenters and ensure that information about the presentations is disseminated to all members Maintain attendance records. Section 4. Treasurer Maintain the club’s budget Pay all charges, collecting all receipts, maintaining a balanced account, and presenting financial information to the Executive Board at least once every semester. The Treasurer will perform such duties as are delegated to him or her by the President. The Treasurer shall serve as the official liaison between the club and the Student Finance Committee of Vanderbilt University (also known as the Activity Fee Committee). 4.2.6 ARTICLE VI ADVISOR Section 1. The role of the advisor is to: A. Serve as the official staff representative of the club. 4.2.7 ARTICLE VII RESPONSIBILITIES Section 1. This club accepts full financial responsibility for all activities that bear its name as official sponsor, and will adhere to college regulations. 4.2.8 ARTICLE VIII AMENDMENTS This Constitution may be amended by a two-thirds vote of active members, which will follow the presentation of a petition containing the proposed amendment. 4.3 Website You can find more information here. "],["conferences.html", "Chapter 5 Conferences 5.1 Scholarships", " Chapter 5 Conferences Here is a (brief) list of conferences that we like to attend: conference time of year abstracts due student scholarships ENAR March early/mid October available SAS Global Forum April September/October available useR June/July February available JSM 1st week of August student awards: Nov/Dec available ASA Biopharm Regulatory-Industry Statistics Workshop September mid April available WSDS late October mid April available APHA late October/early November March available 5.1 Scholarships Students in our department have had success applying to the following funding sources We have had three 1st place successes for the Government Statistics Section Data Challenge. Chat with Ryan, Lucy, Nathan, or Jacquelyn for more information. Women in Statistics and Data Science Travel Award. Chat with Hannah, Alli, Jacquelyn, or Lucy for more information. useR Student Scholarship Chat with Laurie for more information. APHA Applied Public Health Statistics section Student Paper Award Chat with Lucy for more information. SAS Global Forum Student Ambassador Chat with Lucy for more information. JSM Diversity Mentoring Program Chat with Nathan for more information. "],["personal-website.html", "Chapter 6 Personal Website 6.1 Setup: 6.2 Prerequisites: 6.3 Goals: 6.4 Step 1: Git on with it. 6.5 Start your Markdowns! 6.6 Let’s build it! 6.7 Git it hosted 6.8 Show the world who you are. 6.9 Add Projects/ other links 6.10 So what now? 6.11 Afterward", " Chapter 6 Personal Website 6.1 Setup: Today, more than ever, a website is like a business card. As a graduate student or academic, by having a nice website you are not only providing a one-stop-shop for all of your necessary information, you are showing that you are savvy enough to know the importance of a high-quality web-presence, and lastly you are illustrating that you have the technical prowess to accomplish this. 6.2 Prerequisites: Github account Don’t have one? Get one! Working knowledge of RMarkdown. What is RMarkdown you ask? Temporarily narcissistic mind-frame. 6.3 Goals: By the end of this (hopefully) you will have, constructed a simple website with basic information about yourself, hosted it to github for the world to access, have enough knowledge to know what to google to make it better. Okay, let’s get started. 6.4 Step 1: Git on with it. First things first, let’s set up our github repository for hosting this site. “Hosting this site”? Whenever you go to a website, e.g. www.Vanderbilt.edu, your computer is sending out a request across the series of tubes known as the internet to a server sitting on top of some cloud somewhere (aka Indiana) that it would like to look at Vanderbilt’s website. That server, which is simply another computer, receives the request, then goes into its hard-drive and pulls up the file it has stored for Vanderbilt.com and sends that file back to your computer. So when we say “host your site” we simply mean we need to find a server to put your website’s files on that will then deliver those sites to people who want to see them via their web browser of choice. This all sounds very complicated and expensive, and it used to be, but now computation is so cheap that companies literally give away server space to people all the time. One example of this is github. Every time you host a repository on github it is stored on a server for access. Create Repo Click the plus icon in the upper right corner of your github page and select New repository. Set up the repo how you like. In this case I am choosing “initialize repo with a README” so that I can just clone the empty repo to my computer and not bother with git initing. But this is entirely up to you. If you have github you most likely already know how to do this. If you’d like this to be your main website, name this repo yourgithubname.github.io for example, Nick’s would be nstrayer.github.io, Lucy’s would be lucymcgowan.github.io, etc. Now select “Clone or download” and copy the link that pops up. Now open your terminal, navigate to the area where you want to story your website on your local computer and then type in… git clone https://github.com/nstrayer/personal_site.git #&lt;- Replace this with your personal link. There are multiple ways to host websites on github. One is to create a new branch called gh-pages, the other is to tell github to manually tell github look in the master branch. We will do it the latter way. cd personal_site/ #&lt;- Again, replace this with your own folder name This navigates you into your new repo. Now we need to let github know that we want it to look for files to host in our master branch. Navigate to your repository and click Settings on the top right. Scroll down to the Github Pages section and click the drop down menu under “Source” and click “master branch”. Okay good! Now we have a repo setup that allows us to host websites to it. Now let’s actually get a website on it! 6.5 Start your Markdowns! First we do some administrative work to make sure we don’t run into roadblocks on the way. Let’s update our rmarkdown package to make sure we actually have the version that supports RMarkdown websites. install.packages(&quot;rmarkdown&quot;, type = &quot;source&quot;) Next we need to create a couple empty files inside your repository. touch _site.yml #&quot;YML&quot; file that tells your website how to assemble itself touch index.Rmd #Create the main rmd file touch about.Rmd #Create an about file Now open all of these files in RStudio. We will start by filling out the yml file. yml files, while confusing looking at first, are basically a road-map for R to know how to assemble your website. _site.yml name: &quot;nicks-website&quot; output_dir: &quot;.&quot; navbar: title: &quot;Nicks Website&quot; left: - text: &quot;Home&quot; href: index.html - text: &quot;About Me&quot; href: about.html Next we will fill out the bare minimum for the .Rmd files. index.Rmd --- title: &quot;Nick&#39;s Website&quot; --- Hello, World! about.Rmd --- title: &quot;About Me&quot; --- Why I am awesome. If you got lost at any point during this tutorial, you can download a template of these files from Lucy’s github. 6.6 Let’s build it! Okay, one last step to actually have a functioning website. We need to actually turn these separate files into a single cohesive website. To do this we are going to create one more file. This time just a plain r script. touch build_site.R build_site.R #Set our working directory. #This helps avoid confusion if our working directory is #not our site because of other projects we were #working on at the time. setwd(&quot;/Users/Nick/personal_site&quot;) #render your sweet site. rmarkdown::render_site() As a note, you could skip this step if you had started by creating an RStudio project, however, by doing it this way we are not dependent upon RStudio itself. This could be helpful if in the future you are doing this on a computer without RStudio. It also helps explain the process a little bit more. Now if everything has gone according to plan, by running the code in build_site.R you should get a bunch of unintelligible output followed by the message : Output created: index.html. If so, yay, if not, double check all the stuff above to make sure you followed it exactly. Or more likely I messed up and you should inform me. Now we can open it up. Open the repository with finder or whatever tool your computer uses to look at files then click on index.html and hopefully you should get something that looks like this. Sweet. You have now created your own personal website. First let’s push it to github and then we can get down to making it good for you. 6.7 Git it hosted Now we just have to add commit and push everything to github. #Let&#39;s add all the files to our git staging area git add -A #the -A flag tells it git you want everything #Now we can commit git commit -m &quot;My first website commit. The begining of greatness&quot; #Now we push. Note the addendum to normal pushing git push origin master Now we can navigate to our hosted site! Open your browser of choice and go to www.&lt;your github name&gt;.github.io/&lt;your sites repo name&gt;. (E.g. www.nstrayer.github.io/personal_site). Note: github has to build stuff on its end so it may take a minute or so for stuff to show up. Just keep impatiently refreshing the page and it will go faster. Yay, it works. Now we can make it better. 6.8 Show the world who you are. You know how to use RMarkdown. So basically everything that you know how to do you can do here. Like let’s say you want to make your about page more descriptive. about.Rmd --- title: &quot;About Me&quot; --- - __Name:__ Nick - __Ocupation:__ &quot;Student&quot; - __Hobbies:__ Learning software development instead of studying for exams. Here is a super cool photo of me doing one of my favorite things, yawning. ![](me_yawning.jpg) Now just rebuild your site by running build_site.R again and open index.html again to see if it worked. Ideally now you should be able to click on your about page and see the new results! Oh my, that photo looks mighty large. Perhaps we want to make it smaller. We can do that, by adding a special styling file called a css file. Back to the terminal… touch style.css Now open this file up in R and add the following lines: style.css img { width: 400px; display: block; margin: 0 auto; } This takes every image that appears on our site and makes them 400 pixels wide and centers them. You can change these parameters as you want. There are infinitely many ways to customize the style of a website using css. For more information try googling how to &lt;do something&gt; with css and you will most likely find 10,000 ways to do it. Now just add the following lines to your _site.yml file to apply this css to your site. _site.yml name: &quot;nicks-website&quot; output_dir: &quot;.&quot; navbar: title: &quot;Nicks Website&quot; left: - text: &quot;Home&quot; href: index.html - text: &quot;About Me&quot; href: about.html output: html_document: theme: flatly css: style.css We have done a few things here. One we have created the new output field. We have given it a theme (you can choose from any you desire here) and we have added our custom css file to the whole thing as well. Once again, run build_site.R to checkout how things have changed. Looking a lot better. You are a biostatistician however, so how about we try and show that off. 6.9 Add Projects/ other links Let’s make a page with links to your cool (open) projects. Again we edit the _site.yml file… _site.yml name: &quot;nicks-website&quot; output_dir: &quot;.&quot; navbar: title: &quot;Nicks Website&quot; left: - text: &quot;Home&quot; href: index.html - text: &quot;Projects&quot; ##### the new href: projects.html ##### stuff - text: &quot;About Me&quot; href: about.html output: html_document: theme: flatly css: style.css Add another file called projects.Rmd (you know how to do this at this point). projects.Rmd --- title: &quot;Projects&quot; --- Sometimes I like to do projects and then post them on the internet for the whole world to benefit! here&#39;s some examples. ## [Data Visualization in R](http://nickstrayer.me/visualization_in_r/) - An RMarkdown presentation on the common mistakes made in visualization and how to fix them. - Includes a github repo for access to all the code. - Look at how high quality my work is, hire and or collaborate with me. ## [Statistical Plots](http://bl.ocks.org/nstrayer/37a503dd1db369a8f7e3ce21757e19ee) - Interactive plots of things - I can code! Again, build the site with your build script and then take a look at what you have! 6.10 So what now? Well first off you add, commit, and push all your new fancy changes to github. Now you have a website that is better than 95% of people in your situation. What do you do now? You never stop making it better! Every new project you get you do you post it to your projects page, get sick new head shots in? Add that to your about page. Customize it. For instance you may want to add a splash of personalization to your main page. Perhaps a nice chart? Ever made a plot in an RMarkdown before? You know how to do it then. index.Rmd --- title: &quot;Nick&#39;s Website&quot; --- __Look at how cool this plot is!__ $$Y = \\alpha \\cdot \\sin(X), \\alpha = 0,0.1,0.2,...,3$$ #remove backslashes before ticks to get this to work. \\`\\`\\`{r, echo = FALSE, fig.align=&#39;center&#39;} library(tidyverse) cool_function &lt;- function(x, alpha) return(sin(alpha*x)) xs &lt;- seq(0, pi*1.5, 0.005) ys &lt;- cool_function(xs, 1) results &lt;- data_frame(xs, ys, alpha = &quot;1&quot;) for(alpha in seq(0,3, 0.1)){ results &lt;- results %&gt;% bind_rows(data_frame( xs, ys = cool_function(xs, alpha), alpha = as.character(alpha) )) } ggplot(results, aes(x = xs, y = ys, color = alpha)) + geom_line() + theme_bw() + theme(legend.position=&quot;none&quot;) \\`\\`\\` 6.11 Afterward Learn More If you want to learn more about what’s possible using RMarkdown sites (and there is a lot), a good starting place is this document hosted by RStudio. This is where I got almost everything for this. Style This is rather personal, but as for the style: keep it as simple as possible. The simpler your website the less overwhelming it is to viewers. Try and convey everything that you need to and nothing more. That being said, personal flourishes do sometimes help set you apart from others. It’s a balancing act. Questions If this tutorial was confusing or you don’t know what words to use to search for new stuff feel free to contact us. Nick n.strayer at Vanderbilt.edu twitter github Lucy ld.mcgowan at Vanderbilt.edu twitter github "],["math.html", "Chapter 7 Useful Math Facts 7.1 Exponents and Logarithms 7.2 Sequences and Series 7.3 Calculus - Derivatives 7.4 Calculus - Integrals 7.5 Miscellaneous", " Chapter 7 Useful Math Facts 7.1 Exponents and Logarithms for positive constants \\(a\\) and \\(b\\): \\(a^0 = 1\\) \\(a^{-n}=\\frac{1}{a^n}\\) for positive integer \\(n\\) \\(a^{x+y}=a^x a^y\\) \\(a^{x-y}=\\frac{a^x}{a^y}\\) \\((a^x)^y=a^{xy}\\) \\((ab)^x=a^xb^x\\) \\(\\log_a(x) = y\\) implies \\(a^{y} = x\\) If you’re working in statistics it’s usually a safe bet that \\(\\log(x)\\) means \\(\\log_e(x)\\) not \\(\\log_{10}(x)\\). \\(\\log(1) = 0\\) \\(\\log(e) = 1\\) \\(\\log(xy)=\\log(x) + \\log(y)\\) \\(\\log(x/y)=\\log(x)-\\log(y)\\) 7.2 Sequences and Series 7.2.1 Monotonicity A sequence of numbers \\(\\{x_1,x_2,\\ldots\\}\\) is monotone increasing if \\(x_n \\le x_{n+1}\\) for all \\(n\\). If \\(x_n \\ge x_{n+1}\\) for all \\(n\\), the sequence is monotone decreasing 7.2.2 Geometric series \\(\\sum\\limits_{k=0}^{n} a^k =\\frac{1- a^{n+1}}{1-a}\\) for \\(|a|&lt;1\\) \\(\\sum\\limits_{k=0}^{\\infty} a^k =\\frac{1}{1-a}\\) 7.2.3 Taylor series \\(e^x=\\sum\\limits_{n=0}^{\\infty}\\frac{x^n}{n!}\\) 7.2.4 Binomial Theorem \\((x+y)^n = \\sum\\limits_{k=0}^{n}\\binom{n}{k}x^{k}y^{n-k}\\) 7.3 Calculus - Derivatives \\(f(x)=c \\;(\\text{constant}) \\qquad f&#39;(x)=0\\) \\(f(x) = x^{r},\\, r \\in \\mathbb{R} \\qquad f&#39;(x) = rx^{r-1}\\) (Power Rule) \\(f(x) = e^x \\qquad f&#39;(x) = e^x\\) \\(f(x)=\\log(x) \\qquad f&#39;(x) =\\frac{1}{x}\\) \\(f(x)=g(x)\\pm h(x) \\qquad f&#39;(x)=g&#39;(x) \\pm h&#39;(x)\\) \\(f(x)=g(x)h(x) \\qquad f&#39;(x)= g(x)h&#39;(x)+g&#39;(x)h(x)\\) (Product Rule) \\(f(x) =\\frac{g(x)}{h(x)} \\qquad f&#39;(x)=\\frac{g&#39;(x)h(x)-g(x)h&#39;(x)}{[h(x)]^{2}}\\,\\) (Quotient Rule) \\(f(x)=g \\circ h(x) = g(h(x)) \\qquad f&#39;(x) = g&#39;(h(x))h&#39;(x)\\) (Chain Rule) 7.3.1 Maxima and Minima \\(f(x)\\) has a minimum at \\(c\\) if \\(f&#39;(c)=0\\) and \\(f&#39;&#39;(c)&gt;0\\) \\(f(x)\\) has a maximum at \\(c\\) if \\(f&#39;(c)=0\\) and \\(f&#39;&#39;(c)&lt;0\\) 7.4 Calculus - Integrals \\(f(x) = c \\qquad \\int f(x)\\,dx = cx\\) \\(f(x) = x^r \\qquad \\int f(x)\\,dx = \\frac{x^{r+1}}{r+1},\\,r \\ne -1\\) \\(f(x) = \\frac{1}{x} \\qquad \\int f(x)\\,dx = \\log(x)\\) \\(f(x) = e^x \\qquad \\int f(x)\\,dx = e^x\\) \\(f(x) = cg(x) \\qquad \\int f(x)\\,dx = c \\int g(x)\\, dx\\) \\(f(x) = g(x)\\pm h(x) \\qquad \\int f(x)\\,dx = \\int g(x)\\, dx \\pm \\int h(x)\\, dx\\) 7.4.1 Integration by Parts \\(\\int_{a}^{b} f(x)g&#39;(x)\\, dx = f(x) g(x)|_{a}^{b} - \\int_{a}^{b} f&#39;(x)g(x)\\, dx\\) Equivalently, let \\(u=f(x)\\) and \\(dv= g&#39;(x)\\, dx\\) then \\(\\int u\\, dv = uv -\\int v du\\) 7.5 Miscellaneous 7.5.1 Gamma function The Gamma function is defined as \\(\\Gamma(\\alpha) =\\int\\limits_{0}^{\\infty}x^{\\alpha-1}e^{-x}\\, dx\\) for \\(\\alpha &gt; 0\\) \\(\\Gamma(1)=1\\) \\(\\Gamma(\\alpha)=(\\alpha-1)\\Gamma(\\alpha-1)\\) \\(\\alpha\\Gamma(\\alpha)=\\Gamma(\\alpha+1)\\) \\(\\Gamma(n)=(n-1)!\\) for integer \\(n&gt;0\\) 7.5.2 Beta Function The Beta function is defined as \\(B(\\alpha, \\beta)=\\int_{0}^{1}x^{\\alpha-1}(1-x)^{\\beta-1}\\,dx\\) for \\(\\alpha, \\beta &gt; 0\\) \\(B(\\alpha, \\beta) = B(\\beta, \\alpha)\\) \\(B(\\alpha, \\beta) = \\frac{\\Gamma(\\alpha)\\Gamma(\\beta)}{\\Gamma(\\alpha + \\beta)}\\) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
